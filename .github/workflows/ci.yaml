name: CI

on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:
    branches: [master]

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py_version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.py_version }}
    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ matrix.py_version }}-${{ hashFiles('pyproject.toml') }}
    - name: Cache pre-commit
      uses: actions/cache@v4
      with:
        key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        path: ~/.cache/pre-commit
    - name: Install pipx
      run: pip install --user pipx && python -m pipx ensurepath
    - name: Install Poetry
      run: pipx install poetry
    - name: Install dependencies
      run: make setup
    - name: Lint
      env:
        CI_LINT_RUN: 1
      run: make lint
    - name: Run tests
      run: make test

  check:  # This job does nothing and is only used for the branch protection
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  deploy:
    name: Release client
    environment: pypi
    runs-on: ubuntu-latest
    needs: check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for trusted publishing & sigstore
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Install pipx
      run: pip install --user pipx && python -m pipx ensurepath
    - name: Install Poetry
      run: pipx install poetry
    - name: Install dependencies
      run: make poetry-plugins
    - name: Build package
      run: poetry build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
